<store>
    @type elasticsearch
    @id <%= store_id(@target, @context) %>
    host "<%= @target[:host] %>"
    port "<%= @target[:port] %>"
    <%- unless @target[:tls_key].nil? -%>
    scheme https
    ssl_version TLSv1_2
    <%- else -%>
    scheme http
    <%- end -%>
    target_index_key viaq_index_name
    id_key viaq_msg_id
    remove_keys viaq_index_name
    user fluentd
    password changeme
<% unless @target[:tls_key].nil? %> 
    client_key "<%= @target[:tls_key] %>"
    client_cert "<%= @target[:tls_cert] %>"
    ca_file "<%= @target[:tls_cacert] %>"
<% end %>
    type_name com.redhat.viaq.common
    <%- if @context == :include_retry_tag -%>
    retry_tag "<%= @retry_tag if @context == :include_retry_tag %>"
    <%- end -%>
    write_operation "create"
    reload_connections "#{ENV['ES_RELOAD_CONNECTIONS'] || 'true'}"
    # https://github.com/uken/fluent-plugin-elasticsearch#reload-after
    reload_after "#{ENV['ES_RELOAD_AFTER'] || '200'}"
    # https://github.com/uken/fluent-plugin-elasticsearch#sniffer-class-name
    sniffer_class_name "#{ENV['ES_SNIFFER_CLASS_NAME'] || 'Fluent::Plugin::ElasticsearchSimpleSniffer'}"
    reload_on_failure false
    # 2 ^ 31
    request_timeout 2147483648
    <buffer>
        @type file
        path '<%= buffer_path(@target, @context) %>'
        flush_interval "#{ENV['ES_FLUSH_INTERVAL'] || '1s'}"
        flush_thread_count "#{ENV['ES_FLUSH_THREAD_COUNT'] || 2}"
        flush_at_shutdown "#{ENV['FLUSH_AT_SHUTDOWN'] || 'false'}"
        retry_max_interval "#{ENV['ES_RETRY_WAIT'] || '300'}"
        retry_forever true
        queued_chunks_limit_size "#{ENV['BUFFER_QUEUE_LIMIT'] || '32' }"
        chunk_limit_size "#{ENV['BUFFER_SIZE_LIMIT'] || '8m' }"
        overflow_action "#{ENV['BUFFER_QUEUE_FULL_ACTION'] || 'block'}"
    </buffer>
</store>